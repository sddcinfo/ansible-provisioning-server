---
- name: Detect and validate specific network interfaces for provisioning server
  block:
    - name: Check for required interfaces (enp1s0, enp2s0, enp3s0)
      shell: "ip link show {{ item }} 2>/dev/null && echo 'exists' || echo 'missing'"
      register: interface_check
      changed_when: false
      loop:
        - enp1s0  # WAN interface
        - enp2s0  # Bridge member 1
        - enp3s0  # Bridge member 2
      failed_when: false
      
    - name: Set interface variables for provisioning server
      set_fact:
        wan_interface: "enp1s0"
        bridge_interface_1: "enp2s0"
        bridge_interface_2: "enp3s0"
        provisioning_bridge: "br-prov"
        provisioning_ip: "10.10.1.1"
        
    - name: Log interface configuration
      debug:
        msg: |
          Provisioning Server Network Configuration:
          - WAN Interface (DHCP): {{ wan_interface }}
          - Bridge Interface 1: {{ bridge_interface_1 }}
          - Bridge Interface 2: {{ bridge_interface_2 }}
          - Provisioning Bridge: {{ provisioning_bridge }}
          - Provisioning IP: {{ provisioning_ip }}/24
          
    - name: Log interface availability
      debug:
        msg: |
          Interface Availability Check:
          {% for item in interface_check.results %}
          - {{ item.item }}: {{ item.stdout }}
          {% endfor %}

- name: Find existing netplan configuration files
  ansible.builtin.find:
    paths: /etc/netplan
    patterns: "*.yaml,*.yml"
  register: netplan_files

- name: Install ethtool for network interface configuration
  ansible.builtin.apt:
    name: ethtool
    state: present
    update_cache: yes

- name: Backup existing netplan configuration files
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "{{ item.path }}.backup.{{ ansible_date_time.epoch }}"
    remote_src: yes
  with_items: "{{ netplan_files.files }}"
  when: netplan_files.files | length > 0

- name: Remove existing netplan configuration files
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ netplan_files.files }}"

- name: Deploy unified netplan configuration
  ansible.builtin.template:
    src: 00-unified-netcfg.yaml.j2
    dest: /etc/netplan/00-unified-netcfg.yaml
    owner: root
    group: root
    mode: '0600'
  notify: Apply netplan with verification

- name: Validate and apply netplan configuration
  block:
    - name: Validate netplan configuration syntax (YAML only)
      shell: "netplan generate --debug 2>&1 || netplan --help > /dev/null"
      register: netplan_syntax_check
      changed_when: false
      failed_when: false
      
    - name: Log netplan validation approach
      debug:
        msg: |
          Netplan Validation Note:
          - Skipping 'netplan try' for bridge configurations (not supported)
          - Bridge parameters cannot be safely reverted by netplan try
          - Proceeding with direct application as recommended by netplan
      
    - name: Flush handlers to apply netplan directly
      meta: flush_handlers
      
    - name: Wait for network interfaces to stabilize after netplan apply
      pause:
        seconds: 10
        
    - name: Ensure systemd-networkd manages the bridge (Ubuntu 24.04)
      systemd:
        name: systemd-networkd
        state: restarted
        enabled: yes
      ignore_errors: yes
        
    - name: Verify network configuration is active
      command: ip route show
      register: route_verification
      changed_when: false
      failed_when: route_verification.stdout == ""
      
    - name: Verify bridge interface exists and is up
      command: ip addr show {{ provisioning_bridge | default('br-prov') }}
      register: bridge_status
      changed_when: false
      failed_when: bridge_status.rc != 0
      
    - name: Verify bridge members are attached
      shell: "bridge link show | grep {{ provisioning_bridge | default('br-prov') }} || echo 'No bridge members found'"
      register: bridge_members
      changed_when: false
      
    - name: Test WAN connectivity via external interface
      command: ping -c 2 -W 3 -I {{ wan_interface | default('enp1s0') }} 8.8.8.8
      register: wan_connectivity_test
      changed_when: false
      failed_when: false
      ignore_errors: yes
      
    - name: Log network configuration status
      debug:
        msg: 
          - "Netplan bridge configuration applied successfully"
          - "Bridge {{ provisioning_bridge | default('br-prov') }}: ACTIVE with IP {{ provisioning_ip | default('10.10.1.1') }}/24"
          - "Bridge members: {{ bridge_members.stdout if bridge_members.stdout != 'No bridge members found' else 'Bridge created but members may be attaching' }}"
          - "WAN Interface {{ wan_interface | default('enp1s0') }}: {{ 'CONNECTED' if wan_connectivity_test.rc == 0 else 'DISCONNECTED (may be expected)' }}"
          - "Active routes: {{ route_verification.stdout_lines | length }}"

- name: Force 1000/full duplex on bridge interfaces
  ansible.builtin.command: ethtool -s {{ item }} speed 1000 duplex full autoneg off
  loop:
    - "{{ bridge_interface_1 | default('enp2s0') }}"
    - "{{ bridge_interface_2 | default('enp3s0') }}"
  changed_when: true
  notify: Restart systemd-networkd
