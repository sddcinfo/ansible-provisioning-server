# /etc/dnsmasq.d/provisioning.conf

# === General Configuration ===
# Bind to provisioning bridge interface
listen-address={{ provisioning_ip | default('10.10.1.1') }}
# IPv6 support - listen on IPv6 addresses
{% if ansible_default_ipv6.address is defined %}
listen-address={{ ansible_default_ipv6.address }}
{% endif %}
# Listen on all interfaces for IPv6 (fallback)
listen-address=::1

# Interface binding - Bind to provisioning bridge
interface={{ provisioning_bridge | default('br-prov') }}
# Bind to localhost for IPv6
bind-interfaces
# Note: TFTP may bind to 0.0.0.0 even with interface binding
no-resolv
no-poll
clear-on-reload
no-negcache
domain={{ dnsmasq_domain }}
domain-needed
bogus-priv
dns-forward-max=1000

# IPv6 DNS configuration
enable-ra
# Disable IPv6 router advertisements (we're not a router for IPv6)
quiet-ra

# === Upstream DNS Servers (IPv4 and IPv6) ===
server=8.8.8.8
server=8.8.4.4
# IPv6 DNS servers
server=2001:4860:4860::8888
server=2001:4860:4860::8844

# === Static DNS Records (A and PTR) ===
{% for host in dnsmasq_static_hosts %}
# A record for {{ host.name }}
host-record={{ host.name }},{{ host.ip }}
# PTR record for {{ host.name }}
ptr-record={{ host.ip | regex_replace('^(\d+\.\d+\.\d+\.)(\d+)$', '\2.\1') }}in-addr.arpa.,{{ host.name }}
{% endfor %}

# === DHCP Reservations and DNS Records (A and PTR) ===
{% for host in dnsmasq_dhcp_reservations %}
# DHCP reservation for {{ host.hostname }}
dhcp-host={{ host.mac }},{{ host.ip }},{{ host.hostname }}
# A record for the FQDN (e.g., "console-node1.sddc.info")
host-record={{ host.hostname }}.{{ dnsmasq_domain }},{{ host.ip }}
# A record for the short name (e.g., "console-node1")
host-record={{ host.hostname }},{{ host.ip }}
# PTR record for {{ host.hostname }}
ptr-record={{ host.ip | regex_replace('^(\d+\.\d+\.\d+\.)(\d+)$', '\2.\1') }}in-addr.arpa.,{{ host.hostname }}.{{ dnsmasq_domain }}
{% endfor %}

# === DHCP Configuration ===
# IPv4 DHCP
dhcp-range={{ dnsmasq_dhcp_range }}
dhcp-option=option:router,{{ dnsmasq_dhcp_router }}
dhcp-option=option:dns-server,{{ dnsmasq_dhcp_dns_server }}

# IPv6 DHCP (if IPv6 is enabled)
# Enable IPv6 DHCP on the provisioning bridge
dhcp-range=::1000,::2000,constructor:{{ provisioning_bridge | default('br-prov') }},ra-names,12h
# IPv6 DNS server option
dhcp-option=option6:dns-server,[::1]

dhcp-authoritative
log-dhcp

# IPv6 specific options
# Enable IPv6 router advertisements
dhcp-option=option6:information-refresh-time,6h

# === TFTP Configuration ===
enable-tftp
tftp-root={{ tftp_root }}
tftp-secure
tftp-lowercase

# === PXE/iPXE Chainloading Logic ===
dhcp-match=set:ipxe,175
dhcp-userclass=set:ipxe,iPXE
dhcp-match=set:efi-x86_64,option:client-arch,7
dhcp-match=set:efi-x86_64,option:client-arch,9
dhcp-boot=tag:!ipxe,tag:efi-x86_64,ipxe.efi
dhcp-boot=tag:ipxe,{{ ipxe_boot_url }}
