---
# Final system validation after all components are installed
- name: Load netboot configuration variables
  include_vars: "{{ playbook_dir }}/roles/netboot/vars/main.yml"
  tags:
    - validation
    - health_check

- name: Quick validation checks (fast operations only)
  block:
    - name: Check critical services status (quick check)
      ansible.builtin.command: "systemctl is-active {{ item }}"
      register: service_status
      loop:
        - dnsmasq
        - nginx
        - php8.3-fpm
      changed_when: false
      failed_when: service_status.stdout != "active"
      
    - name: Quick DNS test
      ansible.builtin.command: "dig @127.0.0.1 google.com A +short +time=2"
      register: quick_dns_test
      changed_when: false
      failed_when: quick_dns_test.rc != 0 or quick_dns_test.stdout == ""
      
    - name: Quick web test
      ansible.builtin.uri:
        url: "http://127.0.0.1/"
        method: GET
        status_code: 200
        timeout: 3
      register: quick_web_test
      
    - name: Quick validation summary
      ansible.builtin.debug:
        msg: "Quick validation passed: All critical services active, DNS resolving, web responding"
  tags:
    - health_check

- name: Network connectivity validation
  block:
    - name: Validate network connectivity on critical ports
      ansible.builtin.wait_for:
        host: "{{ dnsmasq_listen_address }}"
        port: "{{ item.port }}"
        timeout: 5
      loop:
        - { port: 53, service: "DNS" }   
        - { port: 80, service: "HTTP" }   
      register: port_tests
  tags:
    - validation
    - health_check

- name: TFTP validation (comprehensive)
  block:
    - name: Check if TFTP port is bound by dnsmasq
      ansible.builtin.shell: "netstat -ulnp | grep ':69 ' | grep dnsmasq || ss -ulnp | grep ':69 ' | grep dnsmasq"
      register: tftp_port_bound
      changed_when: false
      failed_when: false
      
    - name: Test TFTP connectivity with actual TFTP client
      ansible.builtin.shell: |
        timeout 3 bash -c "echo 'quit' | tftp {{ dnsmasq_listen_address }} 69" 2>/dev/null || echo "TFTP connection test completed"
        exit 0
      register: tftp_connectivity
      changed_when: false
      when: tftp_port_bound.rc == 0
      
    - name: Set TFTP port test result
      set_fact:
        tftp_port_test: "{{ {'failed': false} if tftp_port_bound.rc == 0 else {'failed': true} }}"
        
    - name: Validate TFTP directory is accessible
      ansible.builtin.stat:
        path: /var/lib/tftpboot
      register: tftp_dir
      failed_when: not tftp_dir.stat.exists or not tftp_dir.stat.readable
      
    - name: Test TFTP functionality if port is accessible
      ansible.builtin.shell: |
        echo "quit" | tftp {{ dnsmasq_listen_address }} 69 2>&1
      register: tftp_test
      when: tftp_port_test is not failed
      changed_when: false
      ignore_errors: true
  tags:
    - validation
    - maintenance
    - health_check
      
- name: DNS validation (comprehensive)
  block:
    - name: Validate IPv4 DNS resolution works
      ansible.builtin.command: "dig @{{ dnsmasq_listen_address }} google.com A +short +time=3"
      register: dns_ipv4_test
      changed_when: false
      failed_when: dns_ipv4_test.rc != 0 or dns_ipv4_test.stdout == ""
  tags:
    - validation
    - health_check

      
- name: Comprehensive DNS validation (slower)
  block:
    - name: Validate IPv6 DNS resolution works
      ansible.builtin.command: "dig @{{ dnsmasq_listen_address }} google.com AAAA +short +time=5"
      register: dns_ipv6_test
      changed_when: false
      failed_when: false  # Don't fail validation if IPv6 DNS doesn't work
      ignore_errors: yes
      
    - name: Test IPv6 DNS server on localhost
      ansible.builtin.command: "dig @::1 google.com AAAA +short +time=5"
      register: dns_localhost_ipv6_test
      changed_when: false
      failed_when: false
      ignore_errors: yes

- name: Web service validation (comprehensive)
  block:
    - name: Validate web service responds
      ansible.builtin.uri:
        url: "http://{{ dnsmasq_listen_address }}/"
        method: GET
        status_code: 200
        timeout: 5
      register: web_test
  tags:
    - validation
    - health_check

- name: Comprehensive diagnostic checks
  block:
    - name: Check dnsmasq TFTP configuration
      ansible.builtin.shell: "grep -E '^enable-tftp|^tftp-root' /etc/dnsmasq.d/provisioning.conf"
      register: tftp_config_check
      changed_when: false
      ignore_errors: true
      
    - name: Check what ports dnsmasq is actually listening on
      ansible.builtin.shell: "netstat -ulnp | grep dnsmasq || ss -ulnp | grep dnsmasq"
      register: dnsmasq_ports_check
      changed_when: false
      ignore_errors: true
      
    - name: Check dnsmasq service status and logs
      ansible.builtin.shell: "systemctl status dnsmasq --no-pager -l"
      register: dnsmasq_status_check
      changed_when: false
      ignore_errors: true
      
    - name: Log comprehensive system diagnostics
      ansible.builtin.debug:
        msg: |
          System Validation Results:
          
          DNS Status:
          - IPv4 DNS ({{ dnsmasq_listen_address }}): {{ 'PASSED' if dns_ipv4_test.rc == 0 else 'FAILED' }}
          - IPv6 DNS AAAA query: {{ 'PASSED' if dns_ipv6_test.rc == 0 else 'FAILED/EXPECTED' }}
          - IPv6 DNS localhost: {{ 'PASSED' if dns_localhost_ipv6_test.rc == 0 else 'FAILED/EXPECTED' }}
          
          TFTP Status:
          - Port 69 bound by dnsmasq: {{ 'Yes' if tftp_port_bound.rc == 0 else 'No' }}
          - Configuration: {{ 'OK' if tftp_config_check.rc == 0 else 'Missing' }}
          
          Service Status: All critical services running
          
    - name: Log validation success
      ansible.builtin.debug:
        msg: "System validation checks completed successfully"
  tags:
    - validation
    - maintenance
    - health_check

  rescue:
    - name: Log validation failure details
      ansible.builtin.debug:
        msg: "System validation failed - check logs and fix issues before proceeding"
        
    - name: Create validation failure flag
      ansible.builtin.file:
        path: /tmp/ansible_validation_failed
        state: touch
        mode: '0644'
        
    - name: Display troubleshooting information
      ansible.builtin.debug:
        msg: |
          Validation failed. Please check:
          1. All services are running: systemctl status dnsmasq nginx php8.3-fpm
          2. Ports are listening: netstat -tlnp | grep -E ':(53|69|80)'
          3. Directory permissions are correct
          4. Check logs in /var/log/ for error details
        
    - name: Fail the validation
      ansible.builtin.fail:
        msg: "Critical system validation failed - manual intervention required"