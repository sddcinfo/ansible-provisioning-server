---
# Proxmox Post-Installation Ansible Playbook
# This playbook configures Proxmox nodes after base installation

- name: Proxmox Post-Installation Configuration
  hosts: proxmox_nodes
  become: yes
  vars:
    proxmox_cluster_name: "sddc-cluster"
    proxmox_datacenter: "SDDC"
    ceph_public_network: "10.10.1.0/24"
    ceph_cluster_network: "10.10.2.0/24"
    
  tasks:
    # System Configuration
    - name: Configure Proxmox repositories
      block:
        - name: Disable enterprise repository
          ansible.builtin.replace:
            path: /etc/apt/sources.list.d/pve-enterprise.list
            regexp: '^deb'
            replace: '#deb'
          when: ansible_facts['distribution'] == 'Debian'
          
        - name: Add no-subscription repository
          ansible.builtin.apt_repository:
            repo: "deb http://download.proxmox.com/debian/pve {{ ansible_distribution_release }} pve-no-subscription"
            state: present
            
        - name: Update apt cache
          ansible.builtin.apt:
            update_cache: yes
      tags: repositories

    # Package Installation
    - name: Install essential packages
      ansible.builtin.apt:
        name:
          - vim
          - htop
          - iotop
          - net-tools
          - python3-pip
          - python3-proxmoxer
          - python3-requests
          - jq
          - lvm2
          - thin-provisioning-tools
          - bridge-utils
          - ifupdown2
          - chrony
          - zfsutils-linux
        state: present
      tags: packages

    # Network Configuration
    - name: Configure network interfaces
      block:
        - name: Get node number from hostname
          set_fact:
            node_number: "{{ inventory_hostname | regex_replace('node', '') }}"
            
        - name: Configure management bridge (vmbr0)
          ansible.builtin.template:
            src: proxmox-network-interfaces.j2
            dest: /etc/network/interfaces
            backup: yes
          notify: restart networking
          
        - name: Configure Ceph network bridge (vmbr1)
          ansible.builtin.blockinfile:
            path: /etc/network/interfaces
            block: |
              auto vmbr1
              iface vmbr1 inet static
                  address 10.10.2.2{{ node_number }}/24
                  bridge-ports none
                  bridge-stp off
                  bridge-fd 0
            marker: "# {mark} ANSIBLE MANAGED BLOCK - Ceph Network"
      tags: network

    # Storage Configuration
    - name: Configure storage
      block:
        - name: Create directory for ISO images
          ansible.builtin.file:
            path: /var/lib/vz/template/iso
            state: directory
            mode: '0755'
            
        - name: Create directory for container templates
          ansible.builtin.file:
            path: /var/lib/vz/template/cache
            state: directory
            mode: '0755'
            
        - name: Configure ZFS arc max (50% of RAM)
          ansible.builtin.lineinfile:
            path: /etc/modprobe.d/zfs.conf
            line: "options zfs zfs_arc_max={{ (ansible_memtotal_mb * 0.5 * 1024 * 1024) | int }}"
            create: yes
          notify: update initramfs
      tags: storage

    # Performance Tuning
    - name: Apply performance tuning
      block:
        - name: Configure sysctl for performance
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_set: yes
            state: present
            reload: yes
          loop:
            - { key: 'vm.swappiness', value: '10' }
            - { key: 'net.core.netdev_max_backlog', value: '5000' }
            - { key: 'net.ipv4.tcp_congestion_control', value: 'bbr' }
            - { key: 'net.core.default_qdisc', value: 'fq' }
            - { key: 'net.ipv4.tcp_fastopen', value: '3' }
            - { key: 'net.core.rmem_max', value: '134217728' }
            - { key: 'net.core.wmem_max', value: '134217728' }
            
        - name: Enable Intel VT-d/AMD-Vi (IOMMU)
          ansible.builtin.lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
            line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet intel_iommu=on iommu=pt"'
          notify: update grub
          when: ansible_processor[1] is search("Intel")
      tags: performance

    # Cluster Configuration
    - name: Configure Proxmox cluster
      block:
        - name: Check if node is in a cluster
          ansible.builtin.command: pvecm status
          register: cluster_status
          failed_when: false
          changed_when: false
          
        - name: Create cluster on first node
          ansible.builtin.command: >
            pvecm create {{ proxmox_cluster_name }}
            --link0 {{ ansible_default_ipv4.address }}
          when:
            - inventory_hostname == "node1"
            - cluster_status.rc != 0
            
        - name: Get cluster join information from node1
          ansible.builtin.command: pvecm nodes
          register: cluster_nodes
          delegate_to: node1
          when:
            - inventory_hostname != "node1"
            - cluster_status.rc != 0
            
        - name: Join nodes to cluster
          ansible.builtin.command: >
            pvecm add {{ hostvars['node1']['ansible_default_ipv4']['address'] }}
          when:
            - inventory_hostname != "node1"
            - cluster_status.rc != 0
      tags: cluster

    # Ceph Preparation
    - name: Prepare for Ceph installation
      block:
        - name: Install Ceph packages
          ansible.builtin.apt:
            name:
              - ceph
              - ceph-common
              - ceph-mds
              - ceph-mgr
              - ceph-mon
              - ceph-osd
            state: present
            
        - name: Configure Ceph network
          ansible.builtin.template:
            src: ceph.conf.j2
            dest: /etc/pve/ceph.conf.prepare
          when: inventory_hostname == "node1"
      tags: ceph_prep

    # Monitoring Setup
    - name: Configure monitoring
      block:
        - name: Install Prometheus node exporter
          ansible.builtin.unarchive:
            src: https://github.com/prometheus/node_exporter/releases/latest/download/node_exporter-1.7.0.linux-amd64.tar.gz
            dest: /tmp
            remote_src: yes
            
        - name: Copy node exporter binary
          ansible.builtin.copy:
            src: /tmp/node_exporter-1.7.0.linux-amd64/node_exporter
            dest: /usr/local/bin/node_exporter
            mode: '0755'
            remote_src: yes
            
        - name: Create node exporter service
          ansible.builtin.copy:
            content: |
              [Unit]
              Description=Node Exporter
              After=network.target
              
              [Service]
              User=nobody
              Group=nogroup
              Type=simple
              ExecStart=/usr/local/bin/node_exporter
              
              [Install]
              WantedBy=multi-user.target
            dest: /etc/systemd/system/node_exporter.service
            
        - name: Start and enable node exporter
          ansible.builtin.systemd:
            name: node_exporter
            state: started
            enabled: yes
            daemon_reload: yes
      tags: monitoring

    # Backup Configuration
    - name: Configure backup schedule
      block:
        - name: Create backup directory
          ansible.builtin.file:
            path: /var/lib/vz/dump
            state: directory
            mode: '0755'
            
        - name: Configure vzdump backup schedule
          ansible.builtin.cron:
            name: "Proxmox VM backup"
            hour: "2"
            minute: "0"
            job: "vzdump --all --compress zstd --mode snapshot --quiet --storage local"
            user: root
      tags: backup

    # Security Hardening
    - name: Apply security hardening
      block:
        - name: Configure firewall rules
          ansible.builtin.template:
            src: proxmox-firewall.j2
            dest: /etc/pve/firewall/cluster.fw
            
        - name: Enable firewall
          ansible.builtin.command: pvecm set -firewall 1
          
        - name: Configure fail2ban for Proxmox
          ansible.builtin.apt:
            name: fail2ban
            state: present
            
        - name: Configure fail2ban for Proxmox web interface
          ansible.builtin.copy:
            content: |
              [proxmox]
              enabled = true
              port = 8006
              filter = proxmox
              logpath = /var/log/daemon.log
              maxretry = 3
              bantime = 3600
            dest: /etc/fail2ban/jail.d/proxmox.conf
      tags: security

    # Template Configuration
    - name: Download common VM templates
      block:
        - name: Download Ubuntu 24.04 cloud image
          ansible.builtin.get_url:
            url: https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-amd64.img
            dest: /var/lib/vz/template/iso/ubuntu-24.04-cloudimg.img
            mode: '0644'
          async: 300
          poll: 10
          
        - name: Download Debian 12 cloud image
          ansible.builtin.get_url:
            url: https://cloud.debian.org/images/cloud/bookworm/latest/debian-12-generic-amd64.qcow2
            dest: /var/lib/vz/template/iso/debian-12-cloudimg.qcow2
            mode: '0644'
          async: 300
          poll: 10
      tags: templates

  handlers:
    - name: restart networking
      ansible.builtin.systemd:
        name: networking
        state: restarted
        
    - name: update initramfs
      ansible.builtin.command: update-initramfs -u
      
    - name: update grub
      ansible.builtin.command: update-grub
      notify: reboot required
      
    - name: reboot required
      ansible.builtin.debug:
        msg: "Reboot required for changes to take effect"